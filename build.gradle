plugins {
    id 'org.ajoberstar.grgit' version '3.0.0'
    id 'org.ajoberstar.reckon' version '0.9.0'
    id 'io.codearte.nexus-staging' version '0.20.0'
    id 'org.sonarqube' version '2.7'
}

group = 'com.github.moaxcp'
description = 'dynamic graphs supporting streams and an EventBus'

reckon {
    scopeFromProp()
    snapshotFromProp()
}

nexusStaging {
    username = System.getProperty('nexus.username')
    password = System.getProperty('nexus.password')
}

def allTestCoverageFile = "$buildDir/jacoco/allTestCoverage.exec"

task jacocoMergeTest(type: JacocoMerge) {
    destinationFile = file(allTestCoverageFile)
    executionData = fileTree(dir:'.', include:'**/build/jacoco/*.exec')
}

tasks.sonarqube.dependsOn jacocoMergeTest

allprojects {
    apply plugin:'jacoco'
    repositories {
        jcenter()
    }

    jacoco {
        toolVersion = '0.8.4'
    }

    sonarqube {
        properties {
            property 'sonar.jacoco.reportPaths', allTestCoverageFile
        }
    }
}

subprojects {
    apply plugin:'java-library'

    sourceCompatibility = 11
    targetCompatibility = 11

    javadoc {
        options.addBooleanOption('html5', true)
        options.links 'https://docs.oracle.com/en/java/javase/11/docs/api/'
        options.links 'http://greenrobot.org/files/eventbus/javadoc/3.0/'
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier = 'sources'
    }

    task javadocJar(type: Jar) {
        from javadoc
        archiveClassifier = 'javadoc'
    }
}