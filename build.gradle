plugins {
    id 'java-library'
    id 'jacoco'
    id 'checkstyle'
    id 'org.ajoberstar.grgit' version '2.2.0'
    id 'org.ajoberstar.reckon' version '0.8.0'
    id 'nebula.source-jar' version '8.2.1'
    id 'nebula.javadoc-jar' version '8.2.1'
    id 'org.ajoberstar.git-publish' version '0.4.1'
    id 'org.sonarqube' version '2.6.2'
}

group = 'com.github.moaxcp'
description = 'dynamic graphs supporting streams and an EventBus'

reckon {
    scopeFromProp()
    snapshotFromProp()
}

sourceCompatibility = 1.10
targetCompatibility = 1.10

sourceSets {
    truth {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
    truthTest {
        compileClasspath += sourceSets.truth.output + sourceSets.main.output
        runtimeClasspath += sourceSets.truth.output + sourceSets.main.output
    }
    test {
        compileClasspath += sourceSets.truth.output
        runtimeClasspath += sourceSets.truth.output
    }
}

configurations {
    truthImplementation.extendsFrom implementation
    truthRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    truthImplementation 'com.google.truth:truth:0.41'
    truthTestImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'
}

dependencies {
    api 'org.greenrobot:eventbus:3.1.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.2.0'
    testImplementation 'com.google.truth:truth:0.42'
    testImplementation 'com.google.truth.extensions:truth-java8-extension:0.42'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.2.0'

    checkstyle 'com.puppycrawl.tools:checkstyle:8.12'
}

repositories {
    jcenter()
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }

    reports {
        html.enabled = true
    }
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

gitPublish {
    repoUri = "https://github.com/moaxcp/graphs.git"
    branch = 'gh-pages'
    contents {
        from 'build/docs'
        from 'build/reports'
    }
    commitMessage = 'Publishing from gradle.'
}

task truthTest(type: Test) {
    description = 'Runs the truth tests.'
    group = 'verification'
    testClassesDirs = sourceSets.truthTest.output.classesDirs
    classpath = sourceSets.truthTest.runtimeClasspath
}

check.dependsOn truthTest