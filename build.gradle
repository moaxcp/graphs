buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.javamodularity:moduleplugin:1.5.0"
    }
}

plugins {
    id 'org.ajoberstar.grgit' version '3.1.1'
    id 'org.ajoberstar.reckon' version '0.11.0'
    id 'io.codearte.nexus-staging' version '0.21.0'
    id 'org.sonarqube' version '2.7.1'
    id 'org.ajoberstar.git-publish' version '2.1.1'
}

group = 'com.github.moaxcp.graphs'
description = 'dynamic graphs supporting streams and an EventBus'

reckon {
    scopeFromProp()
    snapshotFromProp()
}

nexusStaging {
    username = System.getProperty('nexus.username')
    password = System.getProperty('nexus.password')
}

gitPublish {
    repoUri = 'https://github.com/moaxcp/graphs.git'
    branch = 'gh-pages'
    contents {
        from 'graphs-core/build/docs' //todo create combined javadoc
        from 'graphs-core/build/reports'
    }
    commitMessage = 'Publishing from gradle.'
}

allprojects {
    repositories {
        jcenter()
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'jacoco'
    //apply plugin: 'checkstyle'
    apply plugin: 'org.javamodularity.moduleplugin'

    sourceCompatibility = 11
    targetCompatibility = 11

    jacoco {
        toolVersion = '0.8.4'
    }

    javadoc {
        options.addBooleanOption('html5', true)
        options.links 'https://docs.oracle.com/en/java/javase/11/docs/api/'
        options.links 'http://greenrobot.org/files/eventbus/javadoc/3.0/'
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier = 'sources'
    }

    task javadocJar(type: Jar) {
        from javadoc
        archiveClassifier = 'javadoc'
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.8'
        annotationProcessor 'org.projectlombok:lombok:1.18.8'
        //checkstyle 'com.puppycrawl.tools:checkstyle:8.12'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.3.1'
        testImplementation 'com.google.truth:truth:0.46'
        testImplementation 'com.google.truth.extensions:truth-java8-extension:1.0'
        testImplementation 'nl.jqno.equalsverifier:equalsverifier:3.0.3'
        testImplementation 'org.assertj:assertj-core:3.12.2'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    }

    test {
        useJUnitPlatform()

        reports {
            html.enabled = true
        }

        systemProperty "com.google.common.truth.disable_stack_trace_cleaning", "true"
    }
}