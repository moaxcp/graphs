buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'org.javamodularity:moduleplugin:1.6.0'
        classpath 'io.freefair.gradle:lombok-plugin:4.1.6'
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.9.2'
    }
}

plugins {
    id 'org.ajoberstar.grgit' version '4.0.1'
    id 'org.ajoberstar.reckon' version '0.12.0'
    id 'io.codearte.nexus-staging' version '0.21.2'
    id 'de.marcphilipp.nexus-publish' version '0.3.0'
    id 'org.sonarqube' version '2.8'
    id 'org.ajoberstar.git-publish' version '3.0.0-rc.1'
}

group = 'com.github.moaxcp.graphs'
description = 'dynamic graphs supporting streams and an EventBus'

reckon {
    scopeFromProp()
    snapshotFromProp()
}

nexusStaging {
    username = System.getProperty('nexus.username')
    password = System.getProperty('nexus.password')
    packageGroup = 'com.github.moaxcp.graphs'
}

gitPublish {
    repoUri = 'https://github.com/moaxcp/graphs.git'
    branch = 'gh-pages'
    contents {
        from "graphs-manual/build/asciidoc/html5"
    }
    commitMessage = 'Publishing from gradle.'
}

allprojects {
    repositories {
        jcenter()
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'jacoco'
    //apply plugin: 'checkstyle'
    apply plugin: 'org.javamodularity.moduleplugin'
    apply plugin: 'io.freefair.lombok'

    sourceCompatibility = 11
    targetCompatibility = 11

    jacoco {
        toolVersion = '0.8.5'
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }

    javadoc {
        options.addBooleanOption('html5', true)
        options.links 'https://docs.oracle.com/en/java/javase/11/docs/api/'
        options.links 'http://greenrobot.org/files/eventbus/javadoc/3.0/'
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier = 'sources'
    }

    task javadocJar(type: Jar) {
        from javadoc
        archiveClassifier = 'javadoc'
    }

    dependencies {
        //checkstyle 'com.puppycrawl.tools:checkstyle:8.12'
        testImplementation enforcedPlatform('org.junit:junit-bom:5.5.2')
        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testImplementation 'org.junit.jupiter:junit-jupiter-params'
        testImplementation 'com.google.truth:truth:1.0'
        testImplementation 'com.google.truth.extensions:truth-java8-extension:1.0'
        testImplementation 'nl.jqno.equalsverifier:equalsverifier:3.1.10'
        testImplementation 'org.assertj:assertj-core:3.14.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
        //https://github.com/openjdk/skara/pull/66
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    test {
        useJUnitPlatform()

        reports {
            html.enabled = true
        }

        systemProperty "com.google.common.truth.disable_stack_trace_cleaning", "true"

        moduleOptions {
            addOpens = [
                'com.github.moaxcp.graphs.core/com.github.moaxcp.graphs'       : 'nl.jqno.equalsverifier',
                'com.github.moaxcp.graphs.core/com.github.moaxcp.graphs.events': 'nl.jqno.equalsverifier'
            ]
        }
    }

    lombok {
        config['lombok.toString.callSuper'] = "call"
    }
}